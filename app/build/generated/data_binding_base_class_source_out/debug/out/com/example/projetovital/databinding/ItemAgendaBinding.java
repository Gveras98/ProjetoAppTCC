// Generated by view binder compiler. Do not edit!
package com.example.projetovital.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projetovital.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAgendaBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnAgendaDelete;

  @NonNull
  public final Button btnAgendaEditar;

  @NonNull
  public final TextView tvAgendaData;

  @NonNull
  public final TextView tvAgendaEspecialidade;

  @NonNull
  public final TextView tvAgendaHora;

  @NonNull
  public final TextView tvAgendaLocal;

  @NonNull
  public final TextView tvAgendaProcedimento;

  private ItemAgendaBinding(@NonNull CardView rootView, @NonNull Button btnAgendaDelete,
      @NonNull Button btnAgendaEditar, @NonNull TextView tvAgendaData,
      @NonNull TextView tvAgendaEspecialidade, @NonNull TextView tvAgendaHora,
      @NonNull TextView tvAgendaLocal, @NonNull TextView tvAgendaProcedimento) {
    this.rootView = rootView;
    this.btnAgendaDelete = btnAgendaDelete;
    this.btnAgendaEditar = btnAgendaEditar;
    this.tvAgendaData = tvAgendaData;
    this.tvAgendaEspecialidade = tvAgendaEspecialidade;
    this.tvAgendaHora = tvAgendaHora;
    this.tvAgendaLocal = tvAgendaLocal;
    this.tvAgendaProcedimento = tvAgendaProcedimento;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAgendaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAgendaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_agenda, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAgendaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAgendaDelete;
      Button btnAgendaDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnAgendaDelete == null) {
        break missingId;
      }

      id = R.id.btnAgendaEditar;
      Button btnAgendaEditar = ViewBindings.findChildViewById(rootView, id);
      if (btnAgendaEditar == null) {
        break missingId;
      }

      id = R.id.tvAgendaData;
      TextView tvAgendaData = ViewBindings.findChildViewById(rootView, id);
      if (tvAgendaData == null) {
        break missingId;
      }

      id = R.id.tvAgendaEspecialidade;
      TextView tvAgendaEspecialidade = ViewBindings.findChildViewById(rootView, id);
      if (tvAgendaEspecialidade == null) {
        break missingId;
      }

      id = R.id.tvAgendaHora;
      TextView tvAgendaHora = ViewBindings.findChildViewById(rootView, id);
      if (tvAgendaHora == null) {
        break missingId;
      }

      id = R.id.tvAgendaLocal;
      TextView tvAgendaLocal = ViewBindings.findChildViewById(rootView, id);
      if (tvAgendaLocal == null) {
        break missingId;
      }

      id = R.id.tvAgendaProcedimento;
      TextView tvAgendaProcedimento = ViewBindings.findChildViewById(rootView, id);
      if (tvAgendaProcedimento == null) {
        break missingId;
      }

      return new ItemAgendaBinding((CardView) rootView, btnAgendaDelete, btnAgendaEditar,
          tvAgendaData, tvAgendaEspecialidade, tvAgendaHora, tvAgendaLocal, tvAgendaProcedimento);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

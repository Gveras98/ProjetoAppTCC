// Generated by view binder compiler. Do not edit!
package com.example.projetovital.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projetovital.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCadastroBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnAlergias;

  @NonNull
  public final Button btnAtualizarCadastro;

  @NonNull
  public final Button btnMedicamentos;

  @NonNull
  public final RecyclerView recyclerCadastro;

  private FragmentCadastroBinding(@NonNull ScrollView rootView, @NonNull Button btnAlergias,
      @NonNull Button btnAtualizarCadastro, @NonNull Button btnMedicamentos,
      @NonNull RecyclerView recyclerCadastro) {
    this.rootView = rootView;
    this.btnAlergias = btnAlergias;
    this.btnAtualizarCadastro = btnAtualizarCadastro;
    this.btnMedicamentos = btnMedicamentos;
    this.recyclerCadastro = recyclerCadastro;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCadastroBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCadastroBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_cadastro, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCadastroBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_Alergias;
      Button btnAlergias = ViewBindings.findChildViewById(rootView, id);
      if (btnAlergias == null) {
        break missingId;
      }

      id = R.id.btn_Atualizar_Cadastro;
      Button btnAtualizarCadastro = ViewBindings.findChildViewById(rootView, id);
      if (btnAtualizarCadastro == null) {
        break missingId;
      }

      id = R.id.btn_Medicamentos;
      Button btnMedicamentos = ViewBindings.findChildViewById(rootView, id);
      if (btnMedicamentos == null) {
        break missingId;
      }

      id = R.id.recyclerCadastro;
      RecyclerView recyclerCadastro = ViewBindings.findChildViewById(rootView, id);
      if (recyclerCadastro == null) {
        break missingId;
      }

      return new FragmentCadastroBinding((ScrollView) rootView, btnAlergias, btnAtualizarCadastro,
          btnMedicamentos, recyclerCadastro);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
